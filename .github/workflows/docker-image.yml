name: Deploy Spring Boot to Linux Server

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    # tags: [ 'v*.*.*' ]
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  PROJECT_NAME: "ruoyi-wms" # 设置你的项目名
  JAR_PATH: "./target/ruoyi-admin-wms.jar" # 替换为实际的 JAR 路径
permissions:
  contents: read
  packages: write
  # This is used to complete the identity challenge
  # with sigstore/fulcio when running outside of PRs.
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v2

      # 设置 JDK 版本
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 使用 Maven 构建项目
      - name: Build with Maven
        run: mvn package -DskipTests
        
      # Docker
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2.9.0
          
      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags:  ${{ env.REGISTRY }}/${{ env.REPO }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
        
      - name: multiple command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: 51268
          script_stop: true
          sync: true
          script: |
            echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull ${{ env.REGISTRY }}/${{ env.REPO }}:${{ github.sha }}
            docker rm -f ruoyi-wms | true 
            docker run -d -p 9000:8080 --name ruoyi-wms ${{ env.REGISTRY }}/${{ env.REPO }}:${{ github.sha }}
